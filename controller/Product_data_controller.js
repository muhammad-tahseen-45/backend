const { products } = require("../module/Product_schema")
const Send_data = async (req, respo) => {
    try {
        const Data_from_body = req.body
        const data = products(Data_from_body)
        const save_data = await data.save()
        console.log(save_data)
        console.log("data save")
        respo.status(200).json(save_data)
    } catch (error) {
        console.log(error)
        respo.send("internal server error")
    }




}

const Read_data = async (req, resp) => {
    try {
        // find any particular data base on name and id which generated by mongose
        // const data = await products.find({name:"Samsung Galaxy S21"})
        // find all  all  data in collection
        const data = await products.find()
        console.log(data)
        resp.status(200).json(data)
    } catch (error) {
        console.log(error)
        resp.status(500).send("internal server")
    }


}

const Update_data = async(req,res)=>{
    try {
        const Updata_data_params = req.params.id
        const data_from_body = req.body   
       
        const  data = await products.findByIdAndUpdate(Updata_data_params,data_from_body,{
            new:true,
            runValidators:true
        })
        console.log("data UPdated")
        console.log(data)
        res.status(200).json(data)
        if(!data){
            res.status(404).json({messeg:"data hase not found"})
        }
         
    } catch (error) {
        console.log(error)
        res.status(500).json({messeg:"internal server erroe"})
    }
}
const delet_data = async(req,res)=>{
    try {
        const Updata_data_params = req.params   
        console.log(Updata_data_params)
       
       
        const  data = await products.findByIdAndDelete(Updata_data_params.id)
         res.status(200).json(data)
         console.log("data hase deleted")
        
         
    } catch (error) {
        console.log(error)
        res.status(500).json({messeg:"internal server erroe"})
    }
}

module.exports = { Send_data, Read_data,Update_data,delet_data }